% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ego_density.R
\name{ego_density}
\alias{ego_density}
\title{Finds the density of ego networks in either a list of ego networks or sociocentric data.}
\usage{
ego_density(networks, type = "matrix", mode = "digraph")
}
\arguments{
\item{networks}{Either an \emph{n} by \emph{n} adjacency matrix, a \code{igraph} object, \code{network} object, or list thereof.}

\item{type}{The type of object passed to the \code{network} argument. Either "igraph", "matrix", or "network".}

\item{mode}{Either "graph" or "digraph" depending on if the  network is undirected or directed.}
}
\value{
A vector of network density scores for each node in the network.
}
\description{
Finds the density of ego networks in either a list of ego networks or sociocentric data.
If a sociometric network is provided, the function will find the ego networks using \code{find_ego_networks}.
}
\examples{
require(igraph)
set.seed(6436)
g <- sample_gnp(20, 0.25)
ego_density(g, type = "igraph")

require(sna)
set.seed(6436)
net <- as.network(rgraph(20, 1, 0.25))
ego_density(net, type = "network")

require(sna)
set.seed(6436)
net <- rgraph(20, 1, 0.25)
mats <- find_ego_networks(nets, return = "matrix")
ego_density(mats, type = "matrix")

\dontrun{

# Will return error if class of "networks" does not match argument for type
require(sna)
set.seed(6436)
net <- as.network(rgraph(20, 1, 0.25))
ego_density(net, type = "igraph")
}
}
