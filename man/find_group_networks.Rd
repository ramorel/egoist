% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_group_networks.R
\name{find_group_networks}
\alias{find_group_networks}
\title{Create subgroup networks containing only within group ties}
\usage{
find_group_networks(network, grouping_variable, type = NULL,
  return = "matrix")
}
\arguments{
\item{network}{Either an \emph{n} by \emph{n} adjacency matrix, a \code{igraph} object, or \code{network} object.}

\item{grouping_variable}{Either a vector of node attributes indicating group membership or a data frame with vertex names in column 1 and group in column 2}

\item{type}{(Optional) The type of object passed to the \code{network} argument. Either "igraph", "matrix", or "network". If Not provided, will determine type from network provided.}

\item{return}{Determines what object type the function should return. Either "igraph", "matrix", or "network".}
}
\value{
A list of two lists. List 1 contains all within-group networks. List 2 contain all between group networks.
}
\description{
Create subgroup networks containing only within group ties
}
\examples{
# A sample vector of group membership
set.seed(385)
grp <- sample(1:3, 20, replace = TRUE)
require(sna)
set.seed(5)
net <- rgraph(20, 1, 0.2)

# Enter a \\code{network} object and return \\code{igraph} objects
n <- network(net)
find_group_networks(n, grp, return = "igraph")

# Enter a \\code{igraph} object and return \\code{network} objects
g <- graph_from_adjacency_matrix(net)
find_group_networks(g, grp, return = "network")

# Enter a \\code{matrix} object and return \\code{igraph} objects
find_group_networks(net, grp, return = "network")

# Default settings
find_group_networks(g, grp)
find_group_networks(net, grp)
find_group_networks(n, grp)
}
